#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.69])
AC_INIT([Yadex], [1.7.2], [jhndavis68@gmail.com])

# things yadex needs (yadex original configure/config.h)
AC_DEFINE([Y_X11], [], [Needed By Yadex])
AC_DEFINE([Y_UNIX], [], [Needed By Yadex])
AC_DEFINE([Y_GETTIMEOFDAY], [], [Replication of Yadex config.h behavior])
AC_DEFINE([Y_NANOSLEEP], [], [Replication of Yadex config.h behavior])
AC_DEFINE([Y_SNPRINTF], [], [Replication of Yadex config.h behavior])
AC_DEFINE([Y_USLEEP], [], [Replication of Yadex config.h behavior])
AH_TOP([extern const char *yadex_etc_path[];])
AH_TOP([extern const char *yadex_share_path[];])
AC_DEFINE([PREFIX], ["$prefix"], [Installation Prefix])

AC_CONFIG_HEADERS([config.h])

# Checks for programs.
AC_PROG_AWK
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_SED
AC_PROG_GREP

# Checks for libraries.
# FIXME: Replace `main' with a function in `-lX11':
AC_CHECK_LIB([X11], [main])
# FIXME: Replace `main' with a function in `-lc':
AC_CHECK_LIB([c], [main])
# FIXME: Replace `main' with a function in `-lm':
AC_CHECK_LIB([m], [main])

# Checks for header files.
AC_PATH_X
AC_CHECK_HEADERS([float.h limits.h memory.h stddef.h stdlib.h string.h sys/time.h unistd.h utime.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_CHECK_HEADER_STDBOOL
AC_C_INLINE
AC_TYPE_INT64_T
AC_TYPE_MODE_T
AC_TYPE_SIZE_T
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_CHOWN
AC_FUNC_ERROR_AT_LINE
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([getcwd gettimeofday memmove memset pow sqrt strchr strdup strerror strrchr strspn strtol strtoul utime])

# create additional files for yadex config -- kind of hackish
# May need additional consideration in the future!
APPNAME=yadex

if test "$prefix" = "NONE"; then
  YADEXPREFIX='/usr/local/'
else
  YADEXPREFIX=$prefix/
fi

SHAREDIR=share/yadex
SHAREDIRNV=$YADEXPREFIX$SHAREDIR
ETCDIR=etc
ETCDIRNV=$YADEXPREFIX$ETCDIR
#-------------------------------------------------
#
#	YGD files search path
#
echo generating config.share
grep -Fvx '' <<EOF >"config.share"
.
~/.$APPNAME/%v
~/.$APPNAME
$SHAREDIRNV
EOF

#
#	Config files search path
#
echo generating config.etc
grep -Fvx '' <<EOF >"config.etc"
.
~/.$APPNAME/%v
~/.$APPNAME
$ETCDIRNV
EOF

# create config.cc (yadex paths)
pathname=config.cc
  echo generating $pathname
  (
    set -e
    echo '// DO NOT EDIT -- generated by ./configure'
    echo
    echo '#include "config.h"'
    echo
    echo 'const char *yadex_etc_path[[]] ='
    echo '{'
    sed 's/\\/\\\\/g; s/"/\\"/g; s/^.*/  "&",/;' config.etc
    echo '  0'
    echo '};'
    echo
    echo 'const char *yadex_share_path[[]] ='
    echo '{'
    sed 's/\\/\\\\/g; s/"/\\"/g; s/^.*/  "&",/;' config.share
    echo '  0'
    echo '};'
    echo
    echo '// version symbols'
    echo "extern const char *const yadex_source_date = \"$(date +%Y-%m-%d)\";"
    echo "extern const char *const yadex_version = \"$PACKAGE_VERSION\";"
    echo
  ) >$pathname
# end generate config.cc

AM_INIT_AUTOMAKE([nostdinc no-dependencies -Wall foreign subdir-objects])
AM_PROG_AR

AC_CONFIG_FILES([Makefile atclib/Makefile src/Makefile docsrc/Makefile ygd/Makefile])
AC_OUTPUT

# build config.cc
$CXX $CXXFLAGS -c config.cc
